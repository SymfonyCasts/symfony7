diff --git a/src/Entity/Starship.php b/src/Entity/Starship.php
new file mode 100644
index 0000000..f3f630b
--- /dev/null
+++ b/src/Entity/Starship.php
@@ -0,0 +1,96 @@
+<?php
+
+namespace App\Entity;
+
+use App\Model\StarshipStatusEnum;
+use App\Repository\StarshipRepository;
+use Doctrine\ORM\Mapping as ORM;
+
+#[ORM\Entity(repositoryClass: StarshipRepository::class)]
+class Starship
+{
+    #[ORM\Id]
+    #[ORM\GeneratedValue]
+    #[ORM\Column]
+    private ?int $id = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $name = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $class = null;
+
+    #[ORM\Column(length: 255)]
+    private ?string $captain = null;
+
+    #[ORM\Column(enumType: StarshipStatusEnum::class)]
+    private ?StarshipStatusEnum $status = null;
+
+    #[ORM\Column]
+    private ?\DateTimeImmutable $arrivedAt = null;
+
+    public function getId(): ?int
+    {
+        return $this->id;
+    }
+
+    public function getName(): ?string
+    {
+        return $this->name;
+    }
+
+    public function setName(string $name): static
+    {
+        $this->name = $name;
+
+        return $this;
+    }
+
+    public function getClass(): ?string
+    {
+        return $this->class;
+    }
+
+    public function setClass(string $class): static
+    {
+        $this->class = $class;
+
+        return $this;
+    }
+
+    public function getCaptain(): ?string
+    {
+        return $this->captain;
+    }
+
+    public function setCaptain(string $captain): static
+    {
+        $this->captain = $captain;
+
+        return $this;
+    }
+
+    public function getStatus(): ?StarshipStatusEnum
+    {
+        return $this->status;
+    }
+
+    public function setStatus(StarshipStatusEnum $status): static
+    {
+        $this->status = $status;
+
+        return $this;
+    }
+
+    public function getArrivedAt(): ?\DateTimeImmutable
+    {
+        return $this->arrivedAt;
+    }
+
+    public function setArrivedAt(\DateTimeImmutable $arrivedAt): static
+    {
+        $this->arrivedAt = $arrivedAt;
+
+        return $this;
+    }
+}
diff --git a/src/Repository/StarshipRepository.php b/src/Repository/StarshipRepository.php
new file mode 100644
index 0000000..bf4904a
--- /dev/null
+++ b/src/Repository/StarshipRepository.php
@@ -0,0 +1,43 @@
+<?php
+
+namespace App\Repository;
+
+use App\Entity\Starship;
+use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
+use Doctrine\Persistence\ManagerRegistry;
+
+/**
+ * @extends ServiceEntityRepository<Starship>
+ */
+class StarshipRepository extends ServiceEntityRepository
+{
+    public function __construct(ManagerRegistry $registry)
+    {
+        parent::__construct($registry, Starship::class);
+    }
+
+    //    /**
+    //     * @return Starship[] Returns an array of Starship objects
+    //     */
+    //    public function findByExampleField($value): array
+    //    {
+    //        return $this->createQueryBuilder('s')
+    //            ->andWhere('s.exampleField = :val')
+    //            ->setParameter('val', $value)
+    //            ->orderBy('s.id', 'ASC')
+    //            ->setMaxResults(10)
+    //            ->getQuery()
+    //            ->getResult()
+    //        ;
+    //    }
+
+    //    public function findOneBySomeField($value): ?Starship
+    //    {
+    //        return $this->createQueryBuilder('s')
+    //            ->andWhere('s.exampleField = :val')
+    //            ->setParameter('val', $value)
+    //            ->getQuery()
+    //            ->getOneOrNullResult()
+    //        ;
+    //    }
+}
